{"version":3,"file":"component---src-pages-index-js-4de49282ed78f355a50f.js","mappings":"yKAmFA,IAtEY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,6BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uBAAKT,UAAU,oBACb,8EACA,yDAC+B,uDAE/B,gBAAC,cAAD,CAAsBU,MAAO,CAAEV,UAAW,eACxC,uBAAKA,UAAU,iBACb,qBACEW,KAAK,8BACLC,OAAO,SACPC,IAAI,cAEJ,gBAAC,MAAD,OAEF,qBACEF,KAAK,oDACLC,OAAO,SACPC,IAAI,cAEJ,gBAAC,MAAD,OAEF,qBACEF,KAAK,8BACLC,OAAO,SACPC,IAAI,cAEJ,gBAAC,MAAD,a,kFCFhB,UAhEkB,SAAC,GAAwB,IAAD,EAArBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,EAAS,UAAGrB,EAAKG,KAAKC,oBAAb,aAAG,EAAwBkB,MACpCC,EAAQvB,EAAKwB,kBAAkBC,MAQrC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,sBAAIM,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IA1BUC,EAEVC,EAwBMV,EAAQQ,EAAKG,YAAYX,OAASQ,EAAKI,OAAOC,KAEpD,OACE,sBAAIC,IAAKN,EAAKI,OAAOC,MACnB,2BACE7B,UAAU,iBACV+B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKI,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYnB,KAG/B,6BAAQQ,EAAKG,YAAYS,KAAzB,KAzCEX,EAyCwCD,EAAKa,WAvCvDX,EAAcY,KAAKC,MAAMd,EAAO,GAChC,KAFa,KAEIe,OAAOd,GAAe,EAAIA,EAAc,GAA/D,IAAqED,EAArE,qBAwCY,+BACE,qBACEgB,wBAAyB,CACvBC,OAAQlB,EAAKG,YAAYgB,aAAenB,EAAKoB,SAE/CT,SAAS,0B","sources":["webpack://dboscanv-blog/./src/components/bio.js","webpack://dboscanv-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { IconContext } from \"react-icons\"\nimport { IoLogoGithub, IoLogoTwitter, IoLogoLinkedin } from \"react-icons/io5\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.jpeg\"\n        width={90}\n        height={90}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <div className=\"bio__description\">\n          <p>Software Engineer üë®‚Äçüíª En constante aprendizaje.</p>\n          <p>\n            Haciendo algo de magia desde <strong>Montevideo, Uruguay.</strong>\n          </p>\n          <IconContext.Provider value={{ className: \"bio__icons\" }}>\n            <div className=\"bio__networks\">\n              <a\n                href=\"https://github.com/dboscanv\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <IoLogoGithub />\n              </a>\n              <a\n                href=\"https://in.linkedin.com/in/diego-boscan-586b16108\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <IoLogoLinkedin />\n              </a>\n              <a\n                href=\"https://twitter.com/dboscan\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <IoLogoTwitter />\n              </a>\n            </div>\n          </IconContext.Provider>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title;\n  const posts = data.allMarkdownRemark.nodes;\n\n  const getCoffes = time => {\n    const coffeEmoji = \"‚òïÔ∏è\";\n    const repeatTimes = Math.round(time / 5);\n    return `‚Ä¢ ${coffeEmoji.repeat(repeatTimes >= 1 ? repeatTimes : 1)} ${time} min de lectura`;\n  }\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date} {getCoffes(post.timeToRead)}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\", locale: \"es\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","value","href","target","rel","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","time","repeatTimes","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","timeToRead","Math","round","repeat","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}